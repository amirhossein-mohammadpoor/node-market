{"version":3,"sources":["redux/actions/cartActions.js","views/cartPage/CartPage.js"],"names":["createCart","cart","type","types","CREATE_CART","addItem","ADD_ITEM","incrementItem","email","id","INCREMENT_ITEM","decrementItem","DECREMENT_ITEM","removeItem","REMOVE_ITEM","emptyCart","EMPTY_CART","mapStateToProps","createStructuredSelector","userProducts","connect","props","history","useHistory","token","useSelector","state","user","className","onClick","goBack","length","style","color","map","product","key","productId","productName","number","Number","productPrice","to"],"mappings":"yGAAA,wNAEaA,EAAa,SAAAC,GACxB,MAAO,CACLC,KAAMC,IAAMC,YACZH,SAISI,EAAU,SAAAJ,GACrB,MAAO,CACLC,KAAMC,IAAMG,SACZL,SAISM,EAAgB,SAACC,EAAOC,GACnC,MAAO,CACLP,KAAMC,IAAMO,eACZF,QACAC,OAISE,EAAgB,SAACH,EAAOC,GACnC,MAAO,CACLP,KAAMC,IAAMS,eACZJ,QACAC,OAISI,EAAa,SAACL,EAAOC,GAChC,MAAO,CACLP,KAAMC,IAAMW,YACZN,QACAC,OAISM,EAAY,SAAAP,GACvB,MAAO,CACLN,KAAMC,IAAMa,WACZR,W,uDC3CJ,4GAqFMS,EAAkBC,YAAyB,CAC/CC,mBAGaC,sBAAQH,EAAiB,CAAEJ,eAAYN,kBAAeI,mBAAtDS,EA7EE,SAAAC,GACf,IAAMC,EAAUC,cACVC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,SACtCL,EAA2DE,EAA3DF,aAAcN,EAA6CQ,EAA7CR,WAAYN,EAAiCc,EAAjCd,cAAeI,EAAkBU,EAAlBV,cAEjD,OACE,yBAAKiB,UAAU,aACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAcC,QAAS,kBAAMP,EAAQQ,WAArC,kGAKwB,IAAxBX,EAAaY,OACX,uHAAsB,0BAAMC,MAAO,CAAEC,MAAO,QAAtB,OAEtB,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,iFACA,8DACA,wDACA,+FAGJ,+BAEId,EAAae,KAAI,SAAAC,GAAO,OACtB,wBAAIC,IAAKD,EAAQE,WACf,4BAAKF,EAAQG,aACb,4BAAKH,EAAQI,QACb,4BAAKC,OAAOL,EAAQM,cAAgBN,EAAQI,OAA5C,mCACA,4BACE,4BACEX,UAAU,MACVC,QAAS,kBAAMtB,EAAciB,EAAOW,EAAQE,aAE5C,kBAAC,IAAD,OAGmB,IAAnBF,EAAQI,OACN,4BACEX,UAAU,SACVC,QAAS,kBAAMlB,EAAca,EAAOW,EAAQE,aAE5C,kBAAC,IAAD,OAGF,4BACET,UAAU,SACVC,QAAS,kBAAMhB,EAAWW,EAAOW,EAAQE,aAEzC,kBAAC,IAAD,cASlB,yBAAKT,UAAU,UACb,kBAAC,IAAD,CAASc,GAAG,aACV,kBAAC,IAAD","file":"static/js/12.0178010d.chunk.js","sourcesContent":["import types from '../types/cartTypes'\r\n\r\nexport const createCart = cart => {  \r\n  return {\r\n    type: types.CREATE_CART,\r\n    cart\r\n  }\r\n}\r\n\r\nexport const addItem = cart => {  \r\n  return {\r\n    type: types.ADD_ITEM,\r\n    cart\r\n  }\r\n}\r\n\r\nexport const incrementItem = (email, id) => {  \r\n  return {\r\n    type: types.INCREMENT_ITEM,\r\n    email,\r\n    id\r\n  }\r\n}\r\n\r\nexport const decrementItem = (email, id) => {  \r\n  return {\r\n    type: types.DECREMENT_ITEM,\r\n    email,\r\n    id\r\n  }\r\n}\r\n\r\nexport const removeItem = (email, id) => {  \r\n  return {\r\n    type: types.REMOVE_ITEM,\r\n    email,\r\n    id\r\n  }\r\n}\r\n\r\nexport const emptyCart = email => {  \r\n  return {\r\n    type: types.EMPTY_CART,\r\n    email\r\n  }\r\n}","import React from \"react\"\r\nimport \"./CartPage.scss\"\r\nimport SubmitButton from \"../../components/buttons/submitButton/SubmitButton\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Container } from \"reactstrap\"\r\nimport { FaTrash, FaPlus, FaMinus } from \"react-icons/fa\"\r\nimport { connect, useSelector } from \"react-redux\"\r\nimport { userProducts } from \"../../redux/selectors/cartSelector\"\r\nimport { createStructuredSelector } from \"reselect\"\r\nimport { removeItem, incrementItem, decrementItem } from \"../../redux/actions/cartActions\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst CartPage = props => {\r\n  const history = useHistory()\r\n  const token = useSelector(state => state.user.token)\r\n  const { userProducts, removeItem, incrementItem, decrementItem } = props\r\n\r\n  return (\r\n    <div className=\"cart-page\">\r\n      <div className=\"return-button\">\r\n        <SubmitButton onClick={() => history.goBack()}>\r\n          بازگشت به صفحه قبل\r\n        </SubmitButton>\r\n      </div>\r\n      {\r\n        userProducts.length === 0 ? \r\n          <h1>سبد کالا خالی است <span style={{ color: \"red\" }}>:(</span></h1>\r\n          :\r\n          <Container>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>نام محصول</th>\r\n                  <th>تعداد</th>\r\n                  <th>قیمت</th>\r\n                  <th>اعمال تغییر</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  userProducts.map(product => (\r\n                    <tr key={product.productId}>\r\n                      <td>{product.productName}</td>\r\n                      <td>{product.number}</td>\r\n                      <td>{Number(product.productPrice) * product.number} تومان</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"add\"\r\n                          onClick={() => incrementItem(token, product.productId)}\r\n                        >\r\n                          <FaPlus />\r\n                        </button>\r\n                        {\r\n                          product.number !== 1 ?\r\n                            <button\r\n                              className=\"remove\"\r\n                              onClick={() => decrementItem(token, product.productId)}\r\n                            >\r\n                              <FaMinus />\r\n                            </button>\r\n                            :\r\n                            <button\r\n                              className=\"remove\"\r\n                              onClick={() => removeItem(token, product.productId)}\r\n                            >\r\n                              <FaTrash />\r\n                            </button>\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n              </tbody>\r\n            </table>\r\n            <div className=\"submit\">\r\n              <NavLink to=\"/checkout\">\r\n                <SubmitButton>نهایی کردن سفارش</SubmitButton>\r\n              </NavLink>\r\n            </div>\r\n          </Container>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  userProducts\r\n})\r\n\r\nexport default connect(mapStateToProps, { removeItem, incrementItem, decrementItem })(CartPage)"],"sourceRoot":""}